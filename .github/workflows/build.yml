name: Build
on:
  push:
    branches: "**"
    tags-ignore: [ "**" ]
  pull_request:
  release:
    types: [ released ]
jobs:
  build:
    # Only run on PRs if the source branch is on someone else's repo
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    runs-on: ubuntu-latest
    steps:
      - name: "checkout git repository"
        uses: actions/checkout@v4
      - name: "setup jdk"
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - name: "setup gradle"
        uses: gradle/actions/setup-gradle@v4
        # gradle-build-action doesn't support caching files in the project dir
      - name: "cache project local caches"
        uses: actions/cache@v4
        with:
          path: |
            .gradle/loom-cache
            fabric/.gradle/loom-cache
            paper/.gradle/caches/paperweight
            common/build/moddev
            neoforge/build/moddev
            sponge/build/moddev
          key: ${{ runner.os }}-project-local-gradle-caches-${{ hashFiles('**/libs.versions.toml', '**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-project-local-gradle-caches-
      - name: "execute gradle build"
        run: ./gradlew build
      - name: "determine status"
        run: |
          if [ "$(./gradlew properties | awk '/^version:/ { print $2; }' | grep '\-SNAPSHOT')" ]; then
            echo "STATUS=snapshot" >> $GITHUB_ENV
          else
            echo "STATUS=release" >> $GITHUB_ENV
          fi
      - name: "publish snapshot to sonatype snapshots"
        if: "${{ env.STATUS != 'release' && github.event_name == 'push' && github.ref == 'refs/heads/master' }}"
        run: ./gradlew publish
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: "${{ secrets.SONATYPE_USERNAME }}"
          ORG_GRADLE_PROJECT_sonatypePassword: "${{ secrets.SONATYPE_PASSWORD }}"
      - name: "publish release to maven central"
        if: "${{ env.STATUS == 'release' && github.event_name == 'release' }}"
        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: "${{ secrets.SONATYPE_USERNAME }}"
          ORG_GRADLE_PROJECT_sonatypePassword: "${{ secrets.SONATYPE_PASSWORD }}"
          ORG_GRADLE_PROJECT_signingKey: "${{ secrets.SIGNING_KEY }}"
          ORG_GRADLE_PROJECT_signingPassword: "${{ secrets.SIGNING_PASSWORD }}"
      - name: "publish release to modrinth"
        if: "${{ env.STATUS == 'release' && github.event_name == 'release' }}"
        run: ./gradlew publishModrinth
        env:
          MODRINTH_TOKEN: "${{ secrets.MODRINTH_TOKEN }}"
          RELEASE_NOTES: "${{ github.event.release.body }}"
      - name: "publish release to hangar"
        if: "${{ env.STATUS == 'release' && github.event_name == 'release' }}"
        run: ./gradlew publishAllPublicationsToHangar
        env:
          HANGAR_UPLOAD_KEY: "${{ secrets.HANGAR_UPLOAD_KEY }}"
          RELEASE_NOTES: "${{ github.event.release.body }}"
      - name: "publish release to ore"
        if: "${{ env.STATUS == 'release' && github.event_name == 'release' }}"
        run: ./gradlew publishDefaultPublicationToOre
        env:
          ORE_TOKEN: "${{ secrets.ORE_TOKEN }}"
          RELEASE_NOTES: "${{ github.event.release.body }}"
      - name: "upload artifacts"
        uses: actions/upload-artifact@v4
        with:
            name: artifacts
            path: "build/libs/*.jar"
